//LEVEL 1 (!!!)
            //Task 1
            #region
            string c = "lies on a circle";
            string d = "doesn't lie on a circle";
            int r = 2;
            int x_1 = 0, y_1 = 2;
            double x_2 = 1.5, y_2 = 0.7;
            int x_3 = 1, y_3 = 1;
            int x_4 = 3, y_4 = 0;
            double vyr_1 = Math.Abs(((Math.Pow(x_1, 2)) + (Math.Pow(y_1, 2)) - (Math.Pow(r, 2))));
            double vyr_2 = Math.Abs(((Math.Pow(x_2, 2)) + (Math.Pow(y_2, 2)) - (Math.Pow(r, 2))));
            double vyr_3 = Math.Abs(((Math.Pow(x_3, 2)) + (Math.Pow(y_3, 2)) - (Math.Pow(r, 2))));
            double vyr_4 = Math.Abs(((Math.Pow(x_4, 2)) + (Math.Pow(y_4, 2)) - (Math.Pow(r, 2))));
            if (vyr_1 <= (Math.Pow(10, -3)))
            {
                Console.WriteLine(c);
            }
            else
            {
                Console.WriteLine(d);
            }
            if (vyr_2 <= (Math.Pow(10, -3)))
            {
                Console.WriteLine(c);
            }
            else
            {
                Console.WriteLine(d);
            }
            if (vyr_3 <= (Math.Pow(10, -3)))
            {
                Console.WriteLine(c);
            }
            else
            {
                Console.WriteLine(d);
            }
            if (vyr_4 <= (Math.Pow(10, -3)))
            {
                Console.WriteLine(c);
            }
            else
            {
                Console.WriteLine(d);
            }
            #endregion

            //Task 2
            #region
            string v = "inside", t = " outside";
            int x_12, y_12;
            x_12 = int.Parse(Console.ReadLine());
            y_12 = int.Parse(Console.ReadLine());
            if (y_12 >= 0)
            {
                if ((y_12 + (Math.Abs(x_12))) <= 1)
                {
                    Console.WriteLine(v);
                }
                else
                {
                    Console.WriteLine(t);
                }
            }
            else
            {
                Console.WriteLine(t);
            }

            #endregion

            //Task 3
            #region 
            double a_3, b_3, c_3;
            a_3 = Double.Parse(Console.ReadLine());
            b_3 = Double.Parse(Console.ReadLine());
            if (a_3 > 0)
            {
                if (a_3 > b_3)
                {
                    c_3 = a_3;
                }
                else
                {
                    c_3 = b_3;
                    Console.WriteLine(c_3);
                }
            }
            else
            {
                if (a_3 > b_3)
                {
                    c_3 = b_3;
                }
                else
                {
                    c_3 = a_3;
                    Console.WriteLine(c_3);
                }
            }

            #endregion



            //LEVEL 2 (!!!)
            //Task 1
            #region
            Console.WriteLine("Write a number of students in class ");
            int n, i = 0;
            double high, sum = 0, ar;
            n = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Thanks!");
            if (n > 0)
            {
                for (i = 0; i <= n; i = i + 1)
                {
                    Console.WriteLine("We should know the high of student. Please write it");
                    high = Convert.ToDouble(Console.ReadLine());
                    Console.WriteLine("Thanks!");
                    if (high > 0)
                    {
                        sum = sum + high;
                    }
                }
                ar = sum / n;
                Console.WriteLine(ar);
            }
            else
            {
                Console.WriteLine("That's impossible to count");
            }
            #endregion

            //Task 9
            #region
            Console.WriteLine("Please write the number of swimmers");
            int nn, ii = 0;
            double res_1, res_2 = 2000;
            nn = Convert.ToInt32(Console.ReadLine());
            if (nn > 0)
            {
                for (ii = 0; ii <= nn; ii = ii + 1)
                {
                    res_1 = double.Parse(Console.ReadLine());
                    if (res_1 < res_2)
                    {
                        res_2 = res_1;
                    }
                }
                Console.WriteLine("The best result -  " + res_2);
            }
            else
            {
                Console.WriteLine("That's impossible to count");
            }
            #endregion



            //LEVEL 3 (!!!)
            //Task 4
            #region
            Console.WriteLine("How many points?");
            string n_34 = Console.ReadLine();
            double x_34, y_34, R_1, R_2;
            int a_34 = 0, i_34 = 0;
            while (n_34 != "")
            {
                bool result = int.TryParse(n_34, out a_34);
                if (result)
                {
                    for (i_34 = 0; i_34 <= a_34; i++)
                    {
                        x_34 = double.Parse(Console.ReadLine());
                        y_34 = double.Parse(Console.ReadLine());
                        R_1 = double.Parse(Console.ReadLine());
                        R_2 = double.Parse(Console.ReadLine());
                        if (R_1 > 0)
                        {
                            if (R_2 > 0)
                            {
                                if ((Math.Pow(x_34, 2) + (Math.Pow(y_34, 2)) <= R_2))
                                {
                                    if ((Math.Pow(x_34, 2) + (Math.Pow(y_34, 2)) >= R_1))
                                    {
                                        Console.WriteLine("Yes");
                                    }
                                    else
                                    {
                                        Console.WriteLine("No");
                                    }
                                }
                                else
                                {
                                    Console.WriteLine("Impossible");
                                }
                            }
                            else
                            {
                                Console.WriteLine("Impossible");
                            }
                        }
                        else
                        {
                            Console.WriteLine("Inpossible");
                        }

                    }
                }
                else
                {
                    Console.WriteLine("Well, that's the end");
                }
            }

            #endregion

            //Task 11
            #region
            Console.WriteLine("How many students are gonna be in this class?");
            string stud = Console.ReadLine();
            int stud_n = 0, k = 0, s = 0, m_1, m_2, m_3, m_4, s_st, nech = 0, s_stn;
            double fin;
            while (stud != "")
            {
                bool result_11 = int.TryParse(stud, out stud_n);
                if (result_11)
                {
                    for (k = 0; k <= stud_n; k++)
                    {
                        m_1 = Convert.ToInt32(Console.ReadLine());
                        m_2 = Convert.ToInt32(Console.ReadLine());
                        m_3 = Convert.ToInt32(Console.ReadLine());
                        m_4 = Convert.ToInt32(Console.ReadLine());
                        if ((m_1 < 6) | (m_2 < 6) | (m_3 < 6) | (m_4 < 6))
                        {
                            s_st = m_1 + m_2 + m_3 + m_4;
                            if (s_st < 16)
                            {
                                nech = nech + 1;//количество неуспевающих 
                            }
                        }
                        if ((m_1 > 2) | (m_2 > 2) | (m_3 > 2) | (m_4 > 2) | (m_1 <= 5) | (m_2 <= 5) | (m_3 <= 5) | (m_4 <= 5))
                        {
                            s_stn = m_1 + m_2 + m_3 + m_4;
                            s = s + s_stn;
                        }
                    }
                    fin = s / stud_n;
                    Console.WriteLine("The average score of the group - " + fin);
                    Console.WriteLine("The number of students with problems in academic performance - " + nech);
                }
                else
                {
                    Console.WriteLine("Sorry, we can't count now");
                }

            }

            #endregion

            //Task 12 
            #region
            {
                Console.WriteLine("Let's start! Put any number");
                string num = Console.ReadLine();
                int num_n = 0;
                double S = 0;
                int name;
                    bool istina = int.TryParse(num, out num_n);
                    if (istina)
                    {
                        Console.WriteLine("Choose your figure");
                        int.TryParse(Console.ReadLine(), out name);
                        switch (name)
                        {
                            case 1:
                                S = Math.PI * Math.Pow(num_n, 2);
                                Console.WriteLine(S);
                                break;
                            case 2:
                                S = (Math.Pow(3, 0.5) * Math.Pow(num_n, 2)) / 4;
                                Console.WriteLine(S);
                                break;
                            case 3:
                                S = Math.Pow(num_n, 2);
                                Console.WriteLine(S);
                                break;
                        }
                    }
                    else
                    {
                        Console.WriteLine("The end");
                    }
            }
            #endregion

            //Task 13
            #region 
            Console.WriteLine("How many pairs are gonna be?");
            string kol = Console.ReadLine();
            int kol_n, j=0, fname;
            double A, B, Plo;
            bool truth = int.TryParse(kol, out kol_n);
            if (truth)
            {
                Console.WriteLine("Let's start. Choose your figure");
                int.TryParse(Console.ReadLine(), out fname);
                switch (fname)
                {
                    case 1:
                        for (j=0; j <= kol_n; j++)
                        {
                            A = Convert.ToInt32(Console.ReadLine());
                            B = Convert.ToInt32(Console.ReadLine());
                            if (A > 0 | B > 0)
                            {
                                Plo = A * B;
                                Console.WriteLine(Plo);
                            }
                            else
                            {
                                Console.WriteLine("Impossible");
                            }
                        }
                        break;
                    case 2:
                        for (j = 0; j <= kol_n; j++)
                        {
                            A = Convert.ToInt32(Console.ReadLine());
                            B = Convert.ToInt32(Console.ReadLine());
                            if (A < B | A > 0 | B > 0)
                            {
                                Plo = (Math.Pow(A, 2) * Math.PI) - (Math.Pow(B, 2) * Math.PI);
                            }
                            else
                            {
                                Plo = (Math.Pow(B, 2) * Math.PI) - (Math.Pow(A, 2) * Math.PI);
                            }
                        break;
                    case 3:
                        for (j = 0; j <= kol_n; j++)
                        {
                            A = Convert.ToInt32(Console.ReadLine());
                            B = Convert.ToInt32(Console.ReadLine());
                            if (A > 0 | B > 0)
                            {
                                Plo = (B * Math.Pow((4 * Math.Pow(A, 2) - Math.Pow(B, 2)), 0.5) / 4;
                                Console.WriteLine(Plo);
                            }
                            else
                            {
                                Console.WriteLine("Impossible");
                            }
                        }
                        break;

                }

            }
            else
            {
                Console.WriteLine("GoodBye");
            }
            #endregion 
        }
    }
